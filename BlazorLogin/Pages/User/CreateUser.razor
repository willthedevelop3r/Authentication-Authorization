@page "/createuser"

@using BlazorLogin.Models
@using DataAccessLibrary.Models
@using System.Net.Http
@using System.Net.Http.Json

@inject IConfiguration Configuration
@inject HttpClient Http

<h3>Create User</h3>

<EditForm Model="@newUser" OnValidSubmit="@AddUser" @onsubmit:preventDefault>
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstName">First Name</label>
        <InputText id="firstName" @bind-Value="newUser.FirstName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <InputText id="lastName" @bind-Value="newUser.LastName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="emailAddress">Email Address</label>
        <InputText id="emailAddress" @bind-Value="newUser.EmailAddress" type="email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="confirmEmail">Confirm Email</label>
        <InputText id="confirmEmail" @bind-Value="newUser.ConfirmEmail" type="email" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="newUser.PasswordHash" type="password" class="form-control" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="newUser.ConfirmPassword" type="password" class="form-control" />
    </div>
    <div class="d-flex justify-content-end">
        <button type="submit" class="btn btn-primary mt-2">Create</button>
    </div>

    @if (!string.IsNullOrEmpty(error_message))
    {
        <div class="alert alert-danger mt-3">
            @error_message
        </div>
    }

</EditForm>


@code {

    private List<UserModel> users;
    private DisplayUserModel newUser = new DisplayUserModel();
    private string error_message;
    private string BASE_URL;

    /*protected override async Task OnInitializedAsync()
         {
         users = await _db.GetUsers();
     } */

    protected override void OnInitialized()
    {
        BASE_URL = Configuration["ApiUrls:BASE_URL"];
    }

    private async Task AddUser()
    {

        // Mapped User Model

        UserModel u = new UserModel
            {
                FirstName = newUser.FirstName,
                LastName = newUser.LastName,
                Email = newUser.EmailAddress,
                PasswordHash = newUser.PasswordHash
            };

        var response = await Http.PostAsJsonAsync($"{BASE_URL}/api/user", u);

        if (response.IsSuccessStatusCode)
        {
            newUser = new DisplayUserModel();
        }
        else
        {
            error_message = "An error occurred while creating the user.";
        }
    }

}
